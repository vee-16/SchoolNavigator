@model Grid02.Models.Second_Floor

@{
    ViewBag.Title = "Create";
}
<br />
<br />
<br />

<h2>Create</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Second_Floor</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

   
    <div class="form-group">
        @Html.LabelFor(model => model.Row, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Row, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Row, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Col, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Col, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Col, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control", val1 = 0, val2 = 5, val3 = 10, val4 = 15, val5 = 20 } })
            @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PathOrNot, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PathOrNot, new { htmlAttributes = new { @class = "form-control", min = 0, max = 1 } })
            @Html.ValidationMessageFor(model => model.PathOrNot, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "ViewAll")
</div>
